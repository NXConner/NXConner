"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const pg_parameters_1 = require("pg-parameters");
const changelog_repository_1 = require("./data/changelog-repository");
const dbClient = new pg_parameters_1.Client({
    host: 'localhost',
    user: 'postgres',
    password: 'Password01',
    database: 'postgres',
    port: 5434,
});
const repo = new changelog_repository_1.default(dbClient);
(() => __awaiter(this, void 0, void 0, function* () {
    const hasLock = yield repo.aquireLock();
    console.log(hasLock);
    yield repo.releaseLock();
}))().then(() => {
    process.exit();
});
//# sourceMappingURL=index.js.map