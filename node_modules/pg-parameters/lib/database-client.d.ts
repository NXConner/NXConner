export interface IPostgresOptions {
    host?: string;
    user: string;
    password: string;
    database?: string;
    port?: number;
    max?: number;
    min?: number;
    idleTimeoutMillis?: number;
}
export interface IPostresQueryResponse {
    command: string;
    fields: any[];
    rowCount: number;
    rows: any[];
}
export default class DatabaseClient {
    private client;
    private pool;
    constructor(postgresOptions: IPostgresOptions);
    withTransaction(fn: () => Promise<any>): Promise<any>;
    execute(query: string, parameters?: any): Promise<IPostresQueryResponse>;
    query(query: string, parameters?: any): Promise<any[]>;
    querySingle(query: string, parameters?: any): Promise<any>;
    insert(tableName: string, fields: any, ...returning: string[]): Promise<any>;
    private ensureConnection();
}
